%macro store_regs 0
    push rax
    push rcx
    push rbx
    push rdx
    push rsi
    push rdi
    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15
%endmacro

%macro retrieve_regs 0
    pop r15
    pop r14
    pop r13
    pop r12
    pop r11
    pop r10
    pop r9
    pop r8
    pop rdi
    pop rsi
    pop rdx
    pop rbx
    pop rcx
    pop rax
%endmacro

%macro switch_section 0
    sub rsp, 4
    mov ax, ds
    push ax
    mov ax, es
    push ax
    mov ax, 0x10
    mov ds, ax
    mov es, ax
%endmacro

%macro retrieve_section 0
    pop ax
    mov es, ax
    pop ax
    mov ds, ax
    add rsp, 4
%endmacro

%macro interrupt_entry_enter 0
    push rbp
    lea rbp, [rsp]
    store_regs
    switch_section
%endmacro

%macro interrupt_entry_leave 0
    retrieve_section
    retrieve_regs
    leave
%endmacro

; 用于带有错误码的中断，创建一个没有错误码的上下文拷贝
%macro interrupt_stack_wrap_texture 0
    extern memcpy
    sub rsp, 21 * 8
    mov rdi, rsp
    lea rsi, [rsp + 21 * 8]
    mov rdx, 16 * 8
    call memcpy
    lea rdi, [rsp + 16 * 8]
    lea rsi, [rsp + 38 * 8]
    mov rdx, 5 * 8
    call memcpy
%endmacro
